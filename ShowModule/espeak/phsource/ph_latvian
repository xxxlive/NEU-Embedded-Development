
phoneme @
  vowel starttype #@ endtype #@
  length 120
  FMT(vowel/8_7)
endphoneme
 
phoneme i
  vowel starttype #i endtype #i
  length 110
  IfNextVowelAppend(;)
  FMT(vowel/i_6)
endphoneme

phoneme i:
  vowel starttype #i endtype #i
  length 300
  IfNextVowelAppend(;)
  FMT(vowel/i_6)
endphoneme


phoneme e
  vowel starttype #e endtype #e
  length 120
  FMT(vowel/e_mid)
endphoneme

phoneme e:
  vowel starttype #e endtype #e
  length 330
  FMT(vowel/e_mid)
endphoneme


phoneme &
  vowel starttype #a endtype #a
  length 120
  FMT(vowel/&)
endphoneme

phoneme &:
  vowel starttype #a endtype #a
  length 330
  FMT(vowel/&)
endphoneme


phoneme a
  vowel starttype #a endtype #a
  length 120
  ChangeIfDiminished(a#)
  FMT(vowel/a_3)
endphoneme

phoneme a:
  vowel starttype #a endtype #a
  length 350
  FMT(vowel/a_3)
endphoneme

phoneme a#
  vowel starttype #a endtype #a
  ipa …ê
  length 120
  FMT(vowel/V_6)
endphoneme

phoneme o
  vowel starttype #o endtype #o
  length 120
  FMT(vowel/oo_1)
endphoneme

phoneme o:
  vowel starttype #o endtype #o
  length 330
  FMT(vowel/oo_1)
endphoneme


phoneme u
  vowel starttype #u endtype #u
  length 110
  FMT(vowel/u)
endphoneme

phoneme u:
  vowel starttype #u endtype #u
  length 330
  FMT(vowel/u)
endphoneme


phoneme ai
  vowel starttype #a endtype #i
  length 310
  long
  FMT(vdiph/aai)
endphoneme

phoneme ei
  vowel starttype #e endtype #i
  length 300
  long
  FMT(vdiph/eei_2)
endphoneme

phoneme au
  vowel starttype #a endtype #u
  length 300
  long
  FMT(vdiph/aau)
endphoneme

phoneme uo
  vowel starttype #u endtype #a
  length 300
  long
  FMT(vdiph2/uaa)
endphoneme

phoneme oi
  vowel starttype #o endtype #i
  length 290
  long
  FMT(vdiph/ooi)
endphoneme

phoneme ui
  vowel starttype #u endtype #i
  length 290
  long
  FMT(vdiph/ui)
endphoneme

phoneme ie
  vowel starttype #i endtype #e
  length 290
  long
  FMT(vdiph2/ie_2)
endphoneme

phoneme iu
  vowel starttype #i endtype #u
  length 290
  long
  FMT(vdiph2/iu_2)
endphoneme



phoneme R2
  liquid
  trill
  lengthmod 6
  Vowelin  f1=0  f2=1700 -300 300  f3=-300 80
  Vowelout f1=2  f2=1700 -300 300  f3=-300 80 brk
  FMT(r3/r_trill) addWav(r3/r_trill.wav, 50)
endphoneme


phoneme ts
  vls alv afr sibilant lengthenstop
  lengthmod 2
  Vowelin f1=0  f2=1700 -300 300  f3=-100 80
  Vowelout f1=0 f2=1700 -300 250  f3=-100 80  rms=20
  IF nextPh(isPause2) THEN
    WAV(ustop/ts_)
  ENDIF
  WAV(ustop/ts2, 90)
endphoneme


phoneme t   // try disable this and try using English [t]
  vls alv stop lengthenstop
  lengthmod 2
  voicingswitch d
  Vowelin f1=0  f2=1700 -300 300  f3=-100 80
  Vowelout f1=0 f2=1700 -300 250  f3=-100 80  rms=20
  IF nextPh(isPause2) THEN
    WAV(ustop/t_)
  ENDIF
  WAV(ustop/t_short, 115)
endphoneme


phoneme p
  vls blb stop
  lengthmod 2
  voicingswitch b
  Vowelin  f1=0  f2=1000 -50 -100  f3=-200 80
  Vowelout f1=0  f2=1000 -500 -350  f3=-300 80 rms=30
  IF nextPh(isPause2) THEN
    WAV(ustop/p_unasp_, 80)
  ENDIF
  IF nextPh(l) THEN
    WAV(ustop/pl)
  ENDIF
  WAV(ustop/p_unasp, 120)
endphoneme


phoneme k
  vls vel stop
  lengthmod 2
  voicingswitch g
  Vowelin f1=0  f2=2300 200 400  f3=-100 80
  Vowelout f1=0 f2=2300 300 400  f3=-100 80  rms=20
  IF nextPh(isPause2) THEN
    WAV(ustop/k_)
  ENDIF
  IF nextPh(#i) OR nextPh(l^) THEN
    WAV(ustop/ki)
  ENDIF
  IF nextPh(l) THEN
    WAV(ustop/kl)
  ENDIF
  WAV(ustop/k_unasp, 60)   // weaker
endphoneme


phoneme s2   // second part of long [s:]
  vls alv frc sibilant
  lengthmod 3
  Vowelin  f1=0  f2=1700 -300 300  f3=-100 80
  Vowelout f1=0  f2=1700 -300 250  f3=-100 80  rms=20
  WAV(ufric/s_continue)
endphoneme

